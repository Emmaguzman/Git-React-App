{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protpTypes","PropTypes","func","isRequired","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,uBACIC,SAXa,SAAAC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,UAGI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,UAoBnB,wBACID,KAAK,SADT,yBAOZX,EAAYe,WAAW,CACnBd,c,OAAce,EAAUC,KAAKC,Y,mCCpCpBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAY,IAAD,EACTlB,mBAAS,CAC/ByB,KAAK,GACLa,SAAQ,IAHuB,mBAC5BC,EAD4B,KACrBC,EADqB,KAkBnC,OAZAC,qBAAU,WAEFxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACNf,KAAKkB,EACLL,SAAQ,SAGpB,CAACpB,IAGGqB,EDhBsBK,CAAc1B,GAA9Ba,EADwB,EAC7BN,KAAYa,EADiB,EACjBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACnDoB,GACC,mBAAGJ,UAAU,mCAAb,sBAEF,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEZpBgB,EAAe,WAAO,IAAD,EAIM7C,mBAAS,CAAC,KAJhB,mBAIvB8C,EAJuB,KAIX/C,EAJW,KAM9B,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACK+C,EAAWnB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAASA,SAAUA,EAAnB,SAEaA,GADJA,Y,MCd7B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d93b8c46.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('')\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button\r\n                type=\"submit\"\r\n            >Agregar</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.protpTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGift = async (category) => {\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=aXQ4TYHRVVtz40671a3iMTcUrpN6ZnM0`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    //console.log(id,title,url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n     const {data:images,loading}=useFetchGifts(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n           {loading \r\n           &&<p className=\"animate__animated animate__flash\">cargando</p>                      \r\n           }\r\n           <div className=\"card-grid\">\r\n\r\n                {images.map((img) => (\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    >\r\n                    </GifGridItem>\r\n                ))}\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\"\r\nimport { getGift } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifts=(category)=>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    \r\n    useEffect(() => {\r\n    \r\n            getGift(category)\r\n            .then(imgs=>{\r\n                setState({\r\n                   data:imgs,\r\n                   loading:false \r\n                })\r\n            }) \r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert APP</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ul>\r\n                {categories.map(category => (\r\n                    <GifGrid category={category}\r\n                        key={category}>\r\n                                {category}\r\n                    </GifGrid>\r\n                ))}\r\n            </ul>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}